install.packages("swirl")
library(swirl)
install_course("Advanced R Programming")
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div=2)
args(remainder)
submit()
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("I", "love", "delicious food!")
submit()
mad_libs("Austin", "Local", "Sports")
submit()
"I" %p% "love R!"
"I" %p% "love" %p% "R!"
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("love you!")
submit()
submit()
mad_libs("place", "adjective", "noun")
submit()
'I' %p% 'love' %p% "R!"
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("how to submit")
submit()
mad_libs(place = "Austin", adjective = "Local", noun = "Sports")
submit()
'I' %p% 'love' %p% 'R!'
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("good")
submit()
mad_libs(place = "Austin", adjective = "local", noun = "sport")
submit()
"I" %p% "love" %p% "R!"
map_chr(c(5, 3, 4), int_to_string)
map_lgl(c(1, 2, 3, 4, 5), gt)
map_lgl(c(1, 2, 3, 4, 5), gt, b=3)
map_if(c(1, 2, 3, 4), is_even, square)
map_at(c(4, 6, 2, 3, 8), c(1,3,4), square)
map2_chr(1:26,letters, paste)
map2_chr(letters, 1:26, paste)
reduce(c(1, 3, 5, 7), add_talk)
reduce(c("a", "b", "c", "d"), paste_talk)
reduce_right(c("a", "b", "c", "d"), paste_talk)
has_element(random_ints,45)
detect(random_ints[1], is_even)
detect(random_ints, is_even)
detect_index(random_ints, is_even)
keep(random_ints, is_even)
discard(random_ints, is_even)
every(random_ints, function(x){x < 100})
gt_10 <- partial(gt, b=10)
gt_10(11)
walk(mark_antony, message)
map_chr(c(5, 3, 4), int_to_string)
map_lgl(c(1, 2, 3, 4, 5), gt, b=3)
map_if(c(1, 2, 3, 4), is_even)
map_if(c(1, 2, 3, 4), is_even, square)
mat_at(c(4, 6, 2, 3, 8), c(1,3,4),square)
map_at(c(4, 6, 2, 3, 8), c(1,3,4),square)
map2_chr(letters, 1:26, paste)
reduce(c(1, 3, 5, 7), add_talk)
reduce(c("a", "b", "c", "d"), paste_talk)
reduce_right(c("a", "b", "c", "d"), paste_talk)
has_element(random_ints, 45)
detect(random_ints, is_even)
detect_index(random_ints, is_even)
keep(random_ints, is_even)
discard(random_ints, is_even)
every(random_ints, function(x){x<100})
gt_10 <- partial(gt, b=10)
gt_10(11)
walk(mark_antony, message)
exit
